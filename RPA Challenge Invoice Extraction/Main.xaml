<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="714,831" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.Office.Interop.Excel</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Text</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="22">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="694,731" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd1:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="readExtractedCol1" />
      <Variable x:TypeArguments="ui:GenericValue" Name="temp" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="regex1" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="regex" />
      <Variable x:TypeArguments="x:String" Name="invoiceNo" />
      <Variable x:TypeArguments="x:String" Name="invoiceDate" />
      <Variable x:TypeArguments="ui:GenericValue" Name="totalDue" />
      <Variable x:TypeArguments="s:DateTime" Name="elseDueDateToSlashFormat" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,126.04</av:PointCollection>
        <x:Double x:Key="Height">695.02</x:Double>
        <x:Double x:Key="Width">660</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,126.04</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap:VirtualizedContainerService.HintSize="2149,10712" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="id" />
          <Variable x:TypeArguments="x:String" Name="range2" />
          <Variable x:TypeArguments="x:String" Name="range1" />
          <Variable x:TypeArguments="ui:GenericValue" Name="duedate" />
          <Variable x:TypeArguments="x:String" Name="invDate" />
          <Variable x:TypeArguments="ui:GenericValue" Name="compName" />
          <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="readingForFormatting" />
          <Variable x:TypeArguments="x:String" Name="replaceDueDateDashtoSlash" />
          <Variable x:TypeArguments="ui:GenericValue" Name="readDueDateLLC" />
          <Variable x:TypeArguments="s:DateTime" Name="replaceDueDateDashtoSlashWrite" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="2107,10620" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="https://rpachallengeocr.azurewebsites.net/">
          <ui:OpenBrowser.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="2073,10521" sap2010:WorkflowViewState.IdRef="Sequence_1">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd1:DataTable" Name="buildDT" />
                  <Variable x:TypeArguments="x:Int32" Name="row_index2" />
                  <Variable x:TypeArguments="x:Int32" Name="indexForFormatting" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'BUTTON  start'" sap:VirtualizedContainerService.HintSize="2031,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="3329611d182576a56a7c7876c6adeefc" Selector="&lt;webctrl id='start' tag='BUTTON' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:BuildDataTable DataTable="[buildDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="2031,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Due_x0020_Date&quot; msdata:DataType=&quot;UiPath.Core.GenericValue, UiPath.System.Activities, Version=19.12.0.0, Culture=neutral, PublicKeyToken=null&quot; type=&quot;xs:anyType&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_No&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invoice_x0020_Date&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Company_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Total_x0020_Due&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'DIV'" sap:VirtualizedContainerService.HintSize="2031,154" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="pgup" KeyModifiers="None" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="d00742bcd559d883067eab8ee2dd36fd" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div' tag='DIV' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <Sequence DisplayName="Data Scraping" sap:VirtualizedContainerService.HintSize="476,436" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Attach Browser 'Automatio Page'" sap:VirtualizedContainerService.HintSize="434,344" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="376cb16251ad554bbe4224e6bd91687d" Selector="&lt;html title='Automation Challenge - OCR' /&gt;">
                    <ui:BrowserScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExtractData DelayBetweenPagesMS="{x:Null}" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extract Structured Data 'TBODY'" ExtractMetadata="&lt;extract&gt;&lt;row exact='1'&gt;&lt;webctrl tag='tr' /&gt;&lt;/row&gt;&lt;column exact='1' attr='text' name='Serial No'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='1' /&gt;&lt;/column&gt;&lt;column exact='1' attr='text' name='ID'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='2' /&gt;&lt;/column&gt;&lt;column exact='1' attr='text' name='Due Date'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='3' /&gt;&lt;/column&gt;&lt;column exact='1' attr='href' name='Invoice'&gt;&lt;webctrl tag='tr' /&gt;&lt;webctrl tag='td' idx='4' /&gt;&lt;webctrl tag='a' idx='1' /&gt;&lt;webctrl class='glyphicon glyphicon-download-alt' tag='span' idx='1' /&gt;&lt;/column&gt;&lt;/extract&gt;" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="ExtractData_2" MaxNumberOfResults="100" NextLinkSelector="&lt;webctrl id='tableSandbox_next' tag='A' /&gt;" SimulateClick="True">
                            <ui:ExtractData.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="fe697ceb8980e6841a01e201369021fb" Selector="&lt;webctrl tag='TBODY' /&gt;" WaitForReady="COMPLETE">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                              </ui:Target>
                            </ui:ExtractData.Target>
                          </ui:ExtractData>
                        </Sequence>
                      </ActivityAction>
                    </ui:BrowserScope.Body>
                  </ui:BrowserScope>
                </Sequence>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="2031,387" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="Extracted Data.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_8">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[ExtractDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                        <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_1" Result="[readExtractedCol1]" SheetName="Sheet1" StartingCell="C2" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="[row_index2]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="2031,5337" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[readExtractedCol1]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1320,5204" sap2010:WorkflowViewState.IdRef="Sequence_9">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:DateTime" Name="todaysDateType" />
                          <Variable x:TypeArguments="s:DateTime" Name="stringToDate" />
                          <Variable x:TypeArguments="x:String" Name="objTempValue" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Convert.ToString(item).Contains(&quot;-&quot;)]" sap:VirtualizedContainerService.HintSize="1278,591" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="346,444" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence sap:VirtualizedContainerService.HintSize="304,352" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[stringToDate]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(Convert.ToString(item), "dd-MM-yyyy", CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[objTempValue]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[stringToDate.ToString("MM/dd/yyyy")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[stringToDate]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(objTempValue)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:DateTime">[stringToDate]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(item, System.Globalization.CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="1278,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:DateTime">[todaysDateType]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(System.DateTime.Now, System.Globalization.CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[stringToDate.Date &lt; todaysDateType.Date Or stringToDate.Date = todaysDateType.Date]" sap:VirtualizedContainerService.HintSize="1278,4381" sap2010:WorkflowViewState.IdRef="If_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="991,4234" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="ametCorpExists" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="949,4142" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Visible="False" WorkbookPath="Extracted Data.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="915,4033" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="ui:GenericValue" Name="invoiceLink" />
                                        <Variable x:TypeArguments="x:String" Name="range3" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Seq for ID &amp; Duedate" sap:VirtualizedContainerService.HintSize="873,450" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[range1]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["B"+(row_index2+2).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelReadCell Cell="[range1]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="Sheet1">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="x:String">[id]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                        <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[range2]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["C"+(row_index2+2).ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:ExcelReadCell Cell="[range2]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="Sheet1">
                                          <ui:ExcelReadCell.Result>
                                            <OutArgument x:TypeArguments="ui:GenericValue">[duedate]</OutArgument>
                                          </ui:ExcelReadCell.Result>
                                        </ui:ExcelReadCell>
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="873,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[range3]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["D"+(row_index2+2).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadCell Cell="[range3]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="873,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Sheet1">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[invoiceLink]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="873,3252" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" Url="[&quot;https://rpachallengeocr.azurewebsites.net&quot;+invoiceLink]">
                                        <ui:OpenBrowser.Body>
                                          <ActivityAction x:TypeArguments="x:Object">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                            </ActivityAction.Argument>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,3153" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:Boolean" Name="AenenanExist" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="797,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                              <ui:UiElementExists DisplayName="Element Exists 'IMG'" Exists="[AenenanExist]" sap:VirtualizedContainerService.HintSize="797,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                                                <ui:UiElementExists.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="2e58144f4bc9103517dd5f181b0de2d8" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                    <ui:Target.TimeoutMS>
                                                      <InArgument x:TypeArguments="x:Int32" />
                                                    </ui:Target.TimeoutMS>
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:UiElementExists.Target>
                                              </ui:UiElementExists>
                                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="797,51" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                                <ui:CommentOut.Body>
                                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="518,158" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Sequence DisplayName="(Aenean LLC) Image Exists" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Httpsrpac Page'" sap:VirtualizedContainerService.HintSize="434,614" sap2010:WorkflowViewState.IdRef="WindowScope_9" InformativeScreenshot="b52bb20bfb7c0f13c6347e8e4b29688b" Selector="&lt;html url='https://rpachallengeocr.azurewebsites.net/invoices/*.jpg' /&gt;">
                                                        <ui:WindowScope.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,468" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:WaitImageAppear FoundElement="{x:Null}" DisplayName="Find Image 'IMG  https://rpachallen...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitImageAppear_8">
                                                                <ui:WaitImageAppear.Image>
                                                                  <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAIUAAAAYCAYAAADUIj6hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAA1oSURBVGhD7ZlnrFZFE8cfOggICEhVmkogdIgQmg0REzAYBKkBAiiQ0KUGvlAVC0GKqGBoUhMglCAtEAtFqUGE0EPvTellfX9z7/+8cw/3IsaET/ef7HPO2Z2ZnZ2ZnS1PIqQjHTGkB0U6HkJ6UKTjIURBce3aNXveunUrPHjwwN5v3rxpT4/79+8nvyWBb18nXkD9nTt3TObdu3eTa5MgukuXLoV79+5F3zdu3LAn9KqjnSIgk2/k+/5AXD8ALTxeHuDby/W8f/75pz2hgRd4WvR71Lg8j8akJ4BPNH/99Zc99Q0kF528Tx4H0MKnMUhv/JnaGAH16iMBIZ0CPYGUun37tj0JGt8eNwjvogUM0LeDOE283ctPC96wAoOhXoNHDnUUb2jA4ON1QIZMDaqHzweGh/rS+FIbm/q9fv26PQXRqt3L8Y4Dcd7UkJaN0REwHk9z/vz55LckXgsKdcSsBTNmzAhjx44NX3zxRfj444/D1q1brT41MABk0DkG852hBN84TI5SPVDkql8NQMGBbIwSNzDyJAMaP9gLFy48ZDivgwwPLYHOLFUdkD2gjxtP79AzVgrv1Md19MGDzE8++SSMHDnSyvbt25NbkiBe+gTqBxmjRo0y3hEjRoQtW7ZY/eNAmZ8xwNelS5fQoEGDUKRIkfDcc8+Ftm3bhqFDh4Zt27YZ3blz5+wJbPmAEaDUxYsXQ44cOUKWLFlCIpGw0rJlS1MQOtpFnxakEGDA3uh8e4PF4WnVp94xbhzUeR6BunhwKHgwepwnHrCpQcHqgX6p2cPXnThxIhQsWDBkzZrV7Dl79myzAzTYXEGhZUTA1k8//XTIkCGD8U2YMCG55fGA3A8++CDkz58/ZMuWzWRkz5498qvqPvvss2jc+M6Cwhv/m2++McKcOXNGzC+88EK4cuWKtQs4w88ivhGoAQLe44YUD/VyGn3DL9rUjA/QE5kYT7NKuHz5crh69WryV5JMHE+BB960HO7beVfwwcs7bQI0yKZIHw+NSbIA6Vm2pOBc6eJtGA9UsiT0mTNntuf48eOTWx4Njf3dd99N0W+mTJmsSJ4v+F2woPAGfvXVVyNCBOg5a9ashwIDYARvGL1jTJQT+I47UkaQ0eGlzs9wZPh+veEwLAHk+6HdGzoOAkr0cVq+ZdC04NdfgO5p9adxMW7syCzNlStXmDhxotUDr7voFTB8w/fMM89Y9v7666+jtkcBmi+//NJ4lfHLly8f5s+fH3bu3Bl++eUXa3/++eetTWXHjh1mTwsKzYw9e/aY0hCQsliDeEdw06ZNo8F75+JIOfPw4cPhhx9+sH0Ina5YsSKcPHkymfL/g8XJa9asMeX27dtndQcOHAjLli2ztRMZP/30U7QMeaNTR1+7d+8O06dPD6NHjw6TJ08OP/74Y4rgQSdmmox+9uzZsHbt2jBlypTQu3dvS+H0cfToUWsHsgO06Ka1//Tp02H58uVm1M8//9x0P378uLUJ9JeWwwhEb3ycC9ANHj0pCkjkAc83adIkq/sn0B+BlC9fPuMrVqxY+OOPP1JkUnz4+++/W9ZgiYJu0KBB1mZBgdFRAoPRCOGLL74YFixYYOsOAUKBRg4iXcuIvA8cONDWLvi1VlHKlStnaU/rJcrs2rXL+iADlSpVKqxevTo8++yzIXfu3BEf72PGjDEeQF/0j+Pfeeed8NRTTxkdT2W01157LaxcudKMLD15Z+PMeKAhwDNmzBjx1KhRwwIK4BAc06RJE2vLmzev6dCzZ88UY6I0a9Ys/Pzzz8aXFhSQBLL0JVt89913KQLAQzyaePBI16+++sr4/glLliyxPQw8jHfq1KlR0AFlJGzUsWNHs3XhwoVD/fr1rX8LCqXrqlWrmiCMNmzYMGPS+sNg/LqjdZ+O2MlCp41UvJB9CDANdOPGjdGGB+UxuPYwMh6yoFm4cKHxYECCgv2N3wQjG31558kMIUUCTjVkFGR7HowsQ9MfZf/+/cZDPy1atLA2dKhQoYK9a7OnoOJZsWJF41EAenjnMUPhlZ7ffvttCifpXQEBeEeu+OifTOHlpoWPPvoo6ouCf71soEwU37/hIwsKwHrCzNCAf/31V6tn1rCeIbxOnTrRmqxo++2336J2So8ePUwWpWbNmpFyefLkMXp4N23aFGUg2kqXLm1pmWWDYzBZQ/I4SmEcBkYmUzYpXry4zRyWn8WLF1uqVF+tWrWKlpLu3btHsho2bGj6kvpZShTwBBbZRGDGKDgp7733nuk2b948yxCqJwBZMtENZ2ETGd8770kHBfrCR+CTqQkATXyCQBney9KEhTYhRYguCSpatKgJYZCsvZplOIT1VtEFb69evayN0qZNm6hDgufMmTOWlmhjUJr1rNfe6AxW6x2K4khljurVq1s9IJOhCzOYfYFmKDybN2+OZj183FcADEQwM/vXrVtndQKbamWs4cOHWx16kPkUsGSKU6dOWRvgPK99F2XVqlXRrPNG9u9POijeeuutSL9XXnkluTYJaQUEY4iWLDnjpZdeMiHMHm04CAoc65cFNnbKEnSAo7SX6Ny5s81aNpgzZ860WcllCVmBTDFkyBAzEFlIsxQn6vJKCrNMKeWTEQBpHXo5a9y4cTZz6Y9NIMGrgEBfAkByAUFy5MiRMHfuXMtKjRo1MloFBZdEQuPGjW1y4HwCHeAkOc3v2ulX8Ib27/81KBjzvwkKfxStVKmS1XnZAFsrGARN9gSVGBAnaJ3lNpOd+fr1620zVbJkSduhkimYOUAnAwWTipxGUapXXdeuXY2HNV/1GJ5jngaLAdmI0Y5zy5QpY23MUOoIFBW+5TzRa0PIyUSZpF+/fjYGaAkc6UWRbgSKDMQyQx0B06dPnyj1Mhl4Z7lTUE+bNs3a4PUbR++8Jx0UbB7hw2cFChSwCYFu8plAneSho95tT9GuXbtolqkQJAw8Xs/AOD4qW+A06jF4lSpVwuuvv24zjf1EvXr17Fm5cuVQt27dMGDAABsoywdyFIRyHkAx7kSox9mcDsCxY8eivQvOZ8PJbK9Vq1Z4+eWXwxtvvGH91K5d204hHG9xIIGonTilUKFCdtRmhr/99tuRzE8//dQcgXOxh+i57YuDAFNQkBEB9vBO9c77r0EB378JCsYCHzzw6ipbQB/9p8JFGtmQJZPrANOVKGLd18zDaDz1TWF5UJolWLgzB6QgNmXU0TmzjatZjqhCfHeL8TgCwiP5gMHCCzA09QQNly44inVd+xPqOVXAQ7TH10ltMtHD98PR2OtTrVo1MxyBwd2KgpM1WeMfPHiwyZNsnkwEBQWnqtQgevCkg4L/qsgQ8FLYf+m/Db/043uWF2iYgNCBBEsHHdKAsZnl3Jd36NDBnu3btw/vv/++zUJ1QvpUqmSfQB1BQ1YQ6BwaAqhTp052iiAYqOeegj7Vr+4wAMoqU1BwgEDWkDM+/PBDq1Nq5yKGTITO3Jns3bvXNp/QyvE+IDASS58cpatnnIENlCEJCkC9+LnzEB+bZ3SmnbHJ6N55Tzoo0JNNtLcxezBk4hMKNPiWNp0EyShMwETz5s2jWcEGKr42yhAoBA2FTeOGDRusHgdTh1Ac9uabb9qegE0gWYRjG+0lSpQIBw8eNB5uCqmTg+VYjAdYp7W0MJsZDG2LFi2yOgrH59atW4fvv//eMgB01KMHSxWnJDKP6HEydIyPm1tooNUmmuAG9MUfgOLr37+/1QMcwuZMF2EUbjkBfMgGCgzqAHzQ6uaQsT2qdOvWzfgA9Ew4BZRshs+o41vj4NQmcCrS0V57KLICVwZMcjKJvxbo27dvNDkTPs14ZYCcxWC5rvb3EcwgpW1uzFSvwpIjeu4Q/NqsjaYGiBwfjASF5OAAgdME1+1qwzCkPQ2MJ6cdrnQBGyv2OKLX0kjB0HIuuhIIgEDSyQRjclTFWKzBmiBly5aN5BD8gt8bERiyDyc4aBmv39+kVTjmw09/CgYVLeMq2lhT2Av5TEJ2UGDQNxOJd+zGskoA8s0ejJMZwGb/q0uY81ivly5dag0MDuHqQJHPyQOBKILxATMYZxIY/E+Pk/zmlD2BNxzrPP8dECjIIpNo0wNwCrNf/Mxo2kXD/xAEJHcptBMIyOGdizZOS8iQAzn+shmlHQMzo+Dl/wcffGQyZSpmEjKRzRW314+JwpKGzdCdcdOurAB81gDorGP74xRmLXbiL3fx+UlGxpFDVXCy7m78no7jOhtq0SFHk4gA4yiu4NUzgQAGGv/3D9ABbTIwwaE6BYyfHYAbPtb3OXPm2DuA3vMAZQVtLv2SBbxR6cN/S3luJrkTYeD+gglAryMYsrlh5T8B/c8BlAGANqfoSH9xfbzTaUO+dPeQraBBjvgUcI8DXSIB/MN4qZOPvNMFaPyRUzYC6HHo0CHzCX9Ucg/EngsdpR/P6PLKfpOB0xksDow7W0YTfCaRcaSUDIBi3phas/SE37fTP7LUtzKUBgitnO8DDOAMHIzuus0EfAtydNyZ6o8nfUo2T+Sqnf6xg/QCtDMe9RMPJp9lkIdDkfOo4m3v+wJevsYMj8A7urBk6du3a3IhBzpsm9KWIfwNdSiDI0J0QyMAAAAASUVORK5CYII=" />
                                                                </ui:WaitImageAppear.Image>
                                                                <ui:WaitImageAppear.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:WaitImageAppear.Target>
                                                              </ui:WaitImageAppear>
                                                              <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'iexplore.exe'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_15">
                                                                <ui:GetOCRText.OCREngine>
                                                                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                    <ActivityFunc.Argument>
                                                                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                    </ActivityFunc.Argument>
                                                                    <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_15" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                                                                      <ui:GoogleOCR.AllowedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.AllowedCharacters>
                                                                      <ui:GoogleOCR.DeniedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.DeniedCharacters>
                                                                    </ui:GoogleOCR>
                                                                  </ActivityFunc>
                                                                </ui:GetOCRText.OCREngine>
                                                                <ui:GetOCRText.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="921e617e30e5b45290029aba24d2fa9c">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:GetOCRText.Target>
                                                                <ui:GetOCRText.Text>
                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[ametCorpExists]</OutArgument>
                                                                </ui:GetOCRText.Text>
                                                              </ui:GetOCRText>
                                                              <ui:SetClippingRegion Element="{x:Null}" Region="{x:Null}" Direction="RECTANGLE" DisplayName="Reset clipping region" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="SetClippingRegion_8">
                                                                <ui:SetClippingRegion.Size>
                                                                  <ui:Region Rectangle="0, 0, 0, 0" />
                                                                </ui:SetClippingRegion.Size>
                                                              </ui:SetClippingRegion>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:WindowScope.Body>
                                                      </ui:WindowScope>
                                                    </Sequence>
                                                  </Sequence>
                                                </ui:CommentOut.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:CommentOut>
                                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="797,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                <ui:CommentOut.Body>
                                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="518,798" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Sequence DisplayName="(Sit Amet Corp) Image Exiists" sap:VirtualizedContainerService.HintSize="476,706" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Httpsrpac Page'" sap:VirtualizedContainerService.HintSize="434,614" sap2010:WorkflowViewState.IdRef="WindowScope_8" InformativeScreenshot="c5b604af8e7de6ec6811f52fd102e958" Selector="&lt;html url='https://rpachallengeocr.azurewebsites.net/invoices/*.jpg' /&gt;">
                                                        <ui:WindowScope.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,468" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:WaitImageAppear FoundElement="{x:Null}" DisplayName="Find Image 'IMG '" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="WaitImageAppear_7">
                                                                <ui:WaitImageAppear.Image>
                                                                  <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAF4AAAAPCAYAAABtAHg8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAfdSURBVFhH7ZfV61VfEMXvn+GL4Ivd3d2F3YmKiNhiC2Jgo6JityAYKCYIdnd3Y3d3jXzW13U5Xn6/Z19ccDnn7LP37Jk1a2afm4p/+Cv4R/xfgoj/+vVrvH79OmbPnh09evSIRo0aRffu3WPz5s3x/fv3eP/+fbx79y769OkTs2bN0sJPnz7pClgL3r59q6vx4cOH+PjxY1y4cCH69u0bvXv3lr0vX778npG1N2MAmzz//Pkzfvz4oTHw7NkzXXnvfW2D+QbrPP7q1Std/fzt2ze95/r8+fMYMmRING/eXL8RI0bEnTt3NM/wOl9Zi59cATa49zPwnvDgcdYkufr8+bOuKYjhJWTnyZMnmjRpEl26dIny5ctH0aJFY+HChZr48uXLKFeuXLRu3VrPJIM1ZcuW1bONMy8TI0eOjNKlS8ve3Llz03NNOCQnCQQkmsSxD3jz5o2uzIU81no9QXpenTp1om7durr3mqRPe/fujYoVK0apUqWiYcOG0aBBg6hQoUIUL1489u/frznYT66xHfDo0aPfd1mAP+D9TTgxJsWDr9g1Uiy4cuVKFCtWLAYNGqRBJjBWvXp1kU3Wb9++LWfIGKSA2rVrR8mSJUVQEmTem1ANBFarVq0oUaKEKsoweWfPnpVtlLJu3bp4+vSp3qMqiHr48KHeJwO5du1aXLx4UT9XGgThU+HChTXmxAATA9G5c+eOOXPmyK73ZKxDhw5aY/JevHghHg4ePPhH1UE2PuMD2L17t3g5ffp0PHnyRDGfOXMmfQ8yxaVWs2XLlsiVK5daAYQ5kKNHj8aBAwd0z2bMoRrYvGPHjlGoUCEpp0yZMprDuNUMsLVr1y4RPmHChKhXr56ScPfu3XQJnzp1KgoWLBjt27cXaagR4jwfQVApkGNMmjRJe+bMmTOqVKkSPXv2FOnt2rWTEPCrSJEimmtFgpMnT0pITZs2/UN9ELJkyZIYP368niFx27Ztqnr2IMbGjRvH0qVL9R5h4GvXrl2VrKpVq8atW7dU/c2aNVMMVBAdhNbs9gJIKskV8WSGtoHDGGnbtm0MHz48duzYoUko+N69e1GzZk31RHD16lWVNCTdv38/3d+AK4AN6e20GSpmwYIF6XZjVWGHysqfP39s3bpVpFaqVEnPkLF+/Xr5Vb9+ffly7NixyJs3b8ycOTMuXboUo0aNigIFCsS8efMUPLbY48aNGyLdVcJ+GzZsUOIHDx6sd1SBfU0KhkqjDZHcffv2KelULHGwB+dBtmzZ0nzgJ2qH7GrVqsWUKVNi+/bt0aJFCz0fP378t+UskPSUS4gr5demTRv1eRxEba1atZLzZBlH3CoIBBVUrlw53XoAPdBqRoVkn3WMXb58WfO7deum9wR74sQJqXPYsGGaAxEQ3bJlS80BqJqqASgIVUM05UzF8B4SWMs9JCUVDYhv48aNqtrp06enEw/cAkgsIly7dq2St2LFCo0DREO1II4HDx6IZCrHOHTokCoX0ZoP1jO2aNGidPsE8CnFZ7YHWgFBUQU4QMbIMomANBObJDUJ99PFixfLWaqIYMeOHSu1UpL0TkC1QDQVBuiJlDhfVSQOUrABmaBfv36qBoRBC0Dt/FA6QKn4TLXhFz+TvGfPHvmMmIAJYi4x0nLB8uXLZR/iHButB7tTp06Nc+fOyQ6tGXD+UAlwMWDAAI2RRM4BEjRt2rT0Ye0KFPGrVq1ScMk+SimyAAVRSizEmc6dO6cDITGsM0ggRLEp4DzIly+f2gSE05YglZKdMWOG5uAcBDoIVIuzrDGoQNbi9MSJE7UnbcZBAMjDL84F7CUVzTxIxj8USKI5OA1Uzp5UDYk38VSVRbly5UpVJu2K6qEC8dnnIecHwkTxAH9Wr14tu7RWw4dtCgevX78uMggOkjmlly1bpqzSo27evCll4gyHqsGnG0rjdKdSHCzkkTgOF74iAIHzQxkEQJCAykKx/qLCBsnq1KmTnrFLxdSoUUPvdu7cqeRxoOIXn7sQzXc54HBj38ePH+sZOEGQSKtCuRyOEAy57MWeFgPqJ2585L8MbQQ1s46zA+IhtH///umqQUAkFd84fzZt2qTYqW5EQnJpsxzICDNlp+hhOM3EHDly6ICjvNesWaP3HI4ET6vxlwJ9OXv27HISJPvq6NGjlajJkyer9XgNBxcKRtF8NUEeQfXq1UvVwjyeIcNrSDCBGuPGjZOfjDGXrxlAayKBBIiqrVbbAQiIqsFniKJ6+HKZP3++3rtiDx8+nG5jvCf2I0eOaA5iYX/aIcA+ZxUfG8TG2YeI8cH/g+CPFgnH7JFyqQAI4iuDXkhmk6UMHIiVjQF6NY4kg2M8E8kx5vocIMikDyTP71jjrw7DvRIb9GR/S3se9vjygTiDsrfvBgkg8fyr5uAjVvo5cw0Sef78ebUR/3FCOMDxWvFUMkQPHDhQhy8VQNWZK2DfgXo8m7ovGzxDAgElnQEEYXU74OQGJpJAksSxLpNIgC2vT9px4rkmifuvOSYAX/2lBpJVyDt884EJkoIxmOczIPM9yQDmy1f+yNHyxowZo+fMRBO3xcc7EU/DJwA25D6ZhKSTOO0AQVKpAMPJMdvJrADI8OeViWF/5lntgHsHmgSOQ4gTYCVl+s1/C/xNjv8f8AO7yXgNxogLHy0Sx2kfaDX09KFDh6ZtcPVhamSJOOIX1MeMoUIPuW8AAAAASUVORK5CYII=" />
                                                                </ui:WaitImageAppear.Image>
                                                                <ui:WaitImageAppear.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:WaitImageAppear.Target>
                                                              </ui:WaitImageAppear>
                                                              <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'iexplore.exe'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_14">
                                                                <ui:GetOCRText.OCREngine>
                                                                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                    <ActivityFunc.Argument>
                                                                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                    </ActivityFunc.Argument>
                                                                    <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_14" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                                                                      <ui:GoogleOCR.AllowedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.AllowedCharacters>
                                                                      <ui:GoogleOCR.DeniedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.DeniedCharacters>
                                                                    </ui:GoogleOCR>
                                                                  </ActivityFunc>
                                                                </ui:GetOCRText.OCREngine>
                                                                <ui:GetOCRText.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="1a53f45ba9ad8a9dbcc16429b5b6d7c9">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                    <ui:Target.WaitForReady>
                                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                    </ui:Target.WaitForReady>
                                                                  </ui:Target>
                                                                </ui:GetOCRText.Target>
                                                                <ui:GetOCRText.Text>
                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[ametCorpExists]</OutArgument>
                                                                </ui:GetOCRText.Text>
                                                              </ui:GetOCRText>
                                                              <ui:SetClippingRegion Element="{x:Null}" Region="{x:Null}" Direction="RECTANGLE" DisplayName="Reset clipping region" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="SetClippingRegion_7">
                                                                <ui:SetClippingRegion.Size>
                                                                  <ui:Region Rectangle="0, 0, 0, 0" />
                                                                </ui:SetClippingRegion.Size>
                                                              </ui:SetClippingRegion>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:WindowScope.Body>
                                                      </ui:WindowScope>
                                                    </Sequence>
                                                  </Sequence>
                                                </ui:CommentOut.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:CommentOut>
                                              <If Condition="[AenenanExist]" sap:VirtualizedContainerService.HintSize="797,2671" sap2010:WorkflowViewState.IdRef="If_3">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If.Then>
                                                  <Sequence DisplayName="Aenean" sap:VirtualizedContainerService.HintSize="376,2435" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="regex2" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,264" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Sequence DisplayName="sitametcorp" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe 9.jpg'" sap:VirtualizedContainerService.HintSize="434,1686" sap2010:WorkflowViewState.IdRef="BrowserScope_5" InformativeScreenshot="bcae8fe943a5483e53b4fb6d3809e7ec" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;">
                                                              <ui:BrowserScope.Body>
                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1540" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_21">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_21" Image="[Image]" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="372542b13abf07d62e636a273600044e" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="694, 78, 74, 27" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[&quot;A Before InvoiceNo&quot;+invoiceNo]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[invoiceNo.Replace("#","")]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;A After InvoiceNo&quot;+invoiceNo]" />
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_22">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_23" Image="[Image]" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="75e7477bd6668b3d835fc17ec7e982d7" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="660, 145, 110, 34" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;A Before InvoiceDate&quot;+invoiceDate]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(invoiceDate).ToString("dd-MM-yyyy")]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;A After InvoiceDate&quot;+invoiceDate]" />
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_23">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_24" Image="[Image]" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="10cbbc44c4b085e793ca30229c57680a" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="48, 107, 210, 62" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[compName]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;A Company Name&quot;+compName]" />
                                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                                                                      <ui:SendHotkey.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bc7cfdf7a60e8104a688f1c288ef9ad0" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:SendHotkey.Target>
                                                                    </ui:SendHotkey>
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_24">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_22" Image="[Image]" Invert="True" Profile="None" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="f4a9890c276384e9f4f37d810dcae02b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="670, 587, 109, 38" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalDue]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;A Total Due&quot;+totalDue]" />
                                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{id,duedate,invoiceNo,invoiceDate,compName,totalDue}]" DataTable="[buildDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                                                                    <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CloseTab_4" />
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:BrowserScope.Body>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:BrowserScope>
                                                          </Sequence>
                                                          <Sequence DisplayName="aenean" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'chrome.exe 9.jpg'" sap:VirtualizedContainerService.HintSize="434,2019" sap2010:WorkflowViewState.IdRef="BrowserScope_4" InformativeScreenshot="1ae39c4f79fafe5d1050e5c2b7fe0c4b" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;">
                                                              <ui:BrowserScope.Body>
                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1873" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG  https://rpachallen...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                      <ui:Click.CursorPosition>
                                                                        <ui:CursorPosition Position="Center">
                                                                          <ui:CursorPosition.OffsetX>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:CursorPosition.OffsetX>
                                                                          <ui:CursorPosition.OffsetY>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:CursorPosition.OffsetY>
                                                                        </ui:CursorPosition>
                                                                      </ui:Click.CursorPosition>
                                                                      <ui:Click.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="202250500eb486d1ba1cf066ea6b442e" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:Click.Target>
                                                                    </ui:Click>
                                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="pgup" KeyModifiers="None" SpecialKey="True">
                                                                      <ui:SendHotkey.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ab5d09dbf2e47501c027f8371c54967a" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:SendHotkey.Target>
                                                                    </ui:SendHotkey>
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'chrome.exe sample2.jpg'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_27">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_27" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                                                                            <ui:GoogleOCR.AllowedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.AllowedCharacters>
                                                                            <ui:GoogleOCR.DeniedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.DeniedCharacters>
                                                                          </ui:GoogleOCR>
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="3ced1a5f9d96f99f6ba2cff40f093758">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[&quot;Before InvoiceNo&quot;+invoiceNo]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[invoiceNo.Replace("#","").ToString.Trim]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="[&quot;After InvoiceNo&quot;+invoiceNo]" />
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_18">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_18" Image="[Image]" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="93efa8a91ab5b4a3f9b1f789df735abb" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="656, 100, 96, 28" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="x:String">[invDate]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Before Coverting&quot;+invDate.ToString]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(invDate).ToString("dd-MM-yyyy")]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;After Converting&quot;+invoiceDate]" />
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_19">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_19" Image="[Image]" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="344219a0e1bcac8bde99a13f28aada91" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="48, 62, 151, 30" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[compName]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="[&quot;Company Name&quot;+compName]" />
                                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="pgdn" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                                                      <ui:SendHotkey.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c55172efafc440433cdd95d93134ddd3" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:SendHotkey.Target>
                                                                    </ui:SendHotkey>
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_20">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_20" Image="[Image]" Invert="True" Profile="None" />
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="29ea47d49a3eefeaae36a1897c9e2a0b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="637, 667, 65, 24" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalDue]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="[&quot;Total Due&quot;+totalDue]" />
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:BrowserScope.Body>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:BrowserScope>
                                                          </Sequence>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_15" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition OffsetX="229" OffsetY="299" Position="TopLeft" />
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="438c5cafdb7be934750487f12b49010d" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'IMG'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_29" Key="pgup" KeyModifiers="None" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="9c155aea0ea86cf5c51296c350f3087f" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_76">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_76" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="31178b28f99b92888f8f75e8a716bde9" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[temp]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_5" Input="[temp]" IsBuilderTabModified="False" Pattern="(#\d{6}\s)" RegexOption="IgnoreCase, Multiline, Compiled" Result="[regex1]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Matches>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[(regex1(0).value).Replace("#","").ToString.Trim]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_100" Text="[&quot;InvoiceNo = &quot;+invoiceNo]" />
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_72">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_72" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="31178b28f99b92888f8f75e8a716bde9" Selector="&lt;html app='chrome.exe' title='*.jpg (793×1122)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[temp]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                    </ui:GetOCRText>
                                                    <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[temp]" IsBuilderTabModified="False" Pattern="(\d{4}-\d{2}-\d{2})" RegexOption="IgnoreCase, Multiline, Compiled" Result="[regex2]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Matches>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(regex2(0).value).ToString("dd-MM-yyyy")]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_98" Text="[&quot;Invoice Date = &quot;+invoiceDate]" />
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_82">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_82" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="344219a0e1bcac8bde99a13f28aada91" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="48, 62, 151, 30" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[compName]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetOCRText>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_110" Text="[&quot;Company Name = &quot;+compName]" />
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_30" Key="pgdn" KeyModifiers="None" SendWindowMessages="True" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c55172efafc440433cdd95d93134ddd3" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_75">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_75" Image="[Image]" Invert="True" Profile="None" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="29ea47d49a3eefeaae36a1897c9e2a0b" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.ClippingRegion>
                                                            <ui:Region Rectangle="637, 667, 65, 24" />
                                                          </ui:Target.ClippingRegion>
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalDue]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetOCRText>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_93" Text="[&quot;Total Due = &quot;+totalDue]" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{id,duedate,invoiceNo,invoiceDate,compName,totalDue}]" DataTable="[buildDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                                                    <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CloseTab_6" />
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <Sequence DisplayName="Sit Amet Corp" sap:VirtualizedContainerService.HintSize="376,2524" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="518,2163" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Sequence DisplayName="Screen Scraping" sap:VirtualizedContainerService.HintSize="476,2111" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'Httpsrpac Page'" sap:VirtualizedContainerService.HintSize="434,2018" sap2010:WorkflowViewState.IdRef="BrowserScope_3" InformativeScreenshot="4868d9763563a0f208f46a13aca21165" Selector="&lt;html app='chrome.exe' title='*.jpg (816×1056)' /&gt;">
                                                              <ui:BrowserScope.Body>
                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1873" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG  https://rpachallen...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                      <ui:Click.CursorPosition>
                                                                        <ui:CursorPosition Position="Center">
                                                                          <ui:CursorPosition.OffsetX>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:CursorPosition.OffsetX>
                                                                          <ui:CursorPosition.OffsetY>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:CursorPosition.OffsetY>
                                                                        </ui:CursorPosition>
                                                                      </ui:Click.CursorPosition>
                                                                      <ui:Click.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4f1a64d0eb657e0007f224454932d6ad" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:Click.Target>
                                                                    </ui:Click>
                                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="pgup" KeyModifiers="None" SpecialKey="True">
                                                                      <ui:SendHotkey.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ab5d09dbf2e47501c027f8371c54967a" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:SendHotkey.Target>
                                                                    </ui:SendHotkey>
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG  https://rpachallen...'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_1">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                                                                            <ui:GoogleOCR.AllowedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.AllowedCharacters>
                                                                            <ui:GoogleOCR.DeniedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.DeniedCharacters>
                                                                          </ui:GoogleOCR>
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target Element="{x:Null}" InformativeScreenshot="a7da1626956c4139da9cd4e0b82ea415" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                                          <ui:Target.ClippingRegion>
                                                                            <ui:Region Rectangle="717, 81, 46, 19" />
                                                                          </ui:Target.ClippingRegion>
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;S Before InvoiceNo&quot;+invoiceNo]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[invoiceNo.ToString]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;S After InvoiceNo&quot;+invoiceNo]" />
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'chrome.exe 5.jpg'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_29">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_29" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="4">
                                                                            <ui:GoogleOCR.AllowedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.AllowedCharacters>
                                                                            <ui:GoogleOCR.DeniedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.DeniedCharacters>
                                                                          </ui:GoogleOCR>
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="5d2abc26c5325ebf807a808376028b11">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="x:String">[invDate]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[&quot;S Before InvoiceDate&quot;+invDate]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(invDate).ToString("dd-MM-yyyy")]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[&quot;S After InvoiceDate&quot;+invoiceDate]" />
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'iexplore.exe'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                                                                            <ui:GoogleOCR.AllowedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.AllowedCharacters>
                                                                            <ui:GoogleOCR.DeniedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.DeniedCharacters>
                                                                          </ui:GoogleOCR>
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="19d537043184570f022eaf9067dc5d0b">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[compName]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="[&quot;S Company Name&quot;+compName]" />
                                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                                                                      <ui:SendHotkey.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="dd7e710c6b513c1bea8dcd0472be0cb4" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:SendHotkey.Target>
                                                                    </ui:SendHotkey>
                                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'iexplore.exe'" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                                                                      <ui:GetOCRText.OCREngine>
                                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                          <ActivityFunc.Argument>
                                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                          </ActivityFunc.Argument>
                                                                          <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_5" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="5">
                                                                            <ui:GoogleOCR.AllowedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.AllowedCharacters>
                                                                            <ui:GoogleOCR.DeniedCharacters>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:GoogleOCR.DeniedCharacters>
                                                                          </ui:GoogleOCR>
                                                                        </ActivityFunc>
                                                                      </ui:GetOCRText.OCREngine>
                                                                      <ui:GetOCRText.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" InformativeScreenshot="735759a1ba25b4649709417165298cc9">
                                                                          <ui:Target.TimeoutMS>
                                                                            <InArgument x:TypeArguments="x:Int32" />
                                                                          </ui:Target.TimeoutMS>
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:GetOCRText.Target>
                                                                      <ui:GetOCRText.Text>
                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalDue]</OutArgument>
                                                                      </ui:GetOCRText.Text>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                    </ui:GetOCRText>
                                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="[&quot;S Total Due&quot;+totalDue]" />
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:BrowserScope.Body>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:BrowserScope>
                                                          </Sequence>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'IMG  https://rpachallen...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4f1a64d0eb657e0007f224454932d6ad" Selector="&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                    </ui:Click>
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_31" Key="pgup" KeyModifiers="None" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ab5d09dbf2e47501c027f8371c54967a" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_88">
                                                      <ui:GetOCRText.OCREngine>
                                                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                          <ActivityFunc.Argument>
                                                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                          </ActivityFunc.Argument>
                                                          <ui:GoogleOCR AllowedCharacters="{x:Null}" DeniedCharacters="{x:Null}" FilterRegion="{x:Null}" Invert="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_88" Image="[Image]" />
                                                        </ActivityFunc>
                                                      </ui:GetOCRText.OCREngine>
                                                      <ui:GetOCRText.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="bf50c36d26eb8f58e071f92d28928c89" Selector="&lt;html app='chrome.exe' title='*.jpg (816×1056)' /&gt;&lt;webctrl tag='IMG' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:GetOCRText.Target>
                                                      <ui:GetOCRText.Text>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[temp]</OutArgument>
                                                      </ui:GetOCRText.Text>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:GetOCRText>
                                                    <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_12" Input="[temp]" IsBuilderTabModified="False" Pattern="(# \d+)|(#\d+)" RegexOption="IgnoreCase, Compiled" Result="[regex]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Matches>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[(regex(0).value).Replace("#","").ToString.Trim]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_117" Text="[&quot;S After InvoiceNo = &quot;+invoiceNo]" />
                                                    <Sequence DisplayName="Screen Scraping" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="ui:GenericValue" Name="Img" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser '3jpg81610 Page'" sap:VirtualizedContainerService.HintSize="434,406" sap2010:WorkflowViewState.IdRef="BrowserScope_7" InformativeScreenshot="c3a4d867278b7ca08c3de1639a38c717" Selector="&lt;html app='chrome.exe' title='*.jpg (816×1056)' /&gt;">
                                                        <ui:BrowserScope.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,260" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_93">
                                                                <ui:GetOCRText.OCREngine>
                                                                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                    <ActivityFunc.Argument>
                                                                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                    </ActivityFunc.Argument>
                                                                    <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_93" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="5">
                                                                      <ui:GoogleOCR.AllowedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.AllowedCharacters>
                                                                      <ui:GoogleOCR.DeniedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.DeniedCharacters>
                                                                    </ui:GoogleOCR>
                                                                  </ActivityFunc>
                                                                </ui:GetOCRText.OCREngine>
                                                                <ui:GetOCRText.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="c7a82e31850294e2be3ba18cf3d96023" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                  </ui:Target>
                                                                </ui:GetOCRText.Target>
                                                                <ui:GetOCRText.Text>
                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[temp]</OutArgument>
                                                                </ui:GetOCRText.Text>
                                                              </ui:GetOCRText>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:BrowserScope.Body>
                                                      </ui:BrowserScope>
                                                    </Sequence>
                                                    <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_7" Input="[temp]" IsBuilderTabModified="False" Pattern="(Jun\s\d+,|Jul\s\d+,|n\s\d+,|l\s\d+,)(\s\d{4}|\d{4})" RegexOption="IgnoreCase, Compiled" Result="[regex]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Matches>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_103" Text="[regex(0).value]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </WriteLine>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_108" Text="[&quot;S Before InvoiceDate&quot;+regex(0).value]" />
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:String">[invoiceDate]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(regex(0).value).ToString("dd-MM-yyyy")]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_109" Text="[&quot;S After InvoiceDate&quot;+invoiceDate]" />
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[compName]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">["Sit Amet Corp."]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_106" Text="[&quot;S Company Name = &quot;+compName]" />
                                                    <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'BODY'" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="SendHotkey_32" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                                                      <ui:SendHotkey.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="dd7e710c6b513c1bea8dcd0472be0cb4" Selector="&lt;webctrl tag='BODY' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:SendHotkey.Target>
                                                    </ui:SendHotkey>
                                                    <Sequence DisplayName="1 Screen Scraping" sap:VirtualizedContainerService.HintSize="334,66" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="ui:GenericValue" Name="Img" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser '1jpg81610 Page'" sap:VirtualizedContainerService.HintSize="434,406" sap2010:WorkflowViewState.IdRef="BrowserScope_10" InformativeScreenshot="18a89c8e54f212c7ccf41fbce37d3014" Selector="&lt;html app='chrome.exe' title='*.jpg (816×1056)' /&gt;">
                                                        <ui:BrowserScope.Body>
                                                          <ActivityAction x:TypeArguments="x:Object">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,260" sap2010:WorkflowViewState.IdRef="Sequence_86">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'IMG'" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_98">
                                                                <ui:GetOCRText.OCREngine>
                                                                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                                                    <ActivityFunc.Argument>
                                                                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                                                    </ActivityFunc.Argument>
                                                                    <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GoogleOCR_98" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="3">
                                                                      <ui:GoogleOCR.AllowedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.AllowedCharacters>
                                                                      <ui:GoogleOCR.DeniedCharacters>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </ui:GoogleOCR.DeniedCharacters>
                                                                    </ui:GoogleOCR>
                                                                  </ActivityFunc>
                                                                </ui:GetOCRText.OCREngine>
                                                                <ui:GetOCRText.Target>
                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="1643e79d5bfc2203fa6308705567e501" Selector="&lt;webctrl tag='IMG' /&gt;" WaitForReady="COMPLETE">
                                                                    <ui:Target.TimeoutMS>
                                                                      <InArgument x:TypeArguments="x:Int32" />
                                                                    </ui:Target.TimeoutMS>
                                                                  </ui:Target>
                                                                </ui:GetOCRText.Target>
                                                                <ui:GetOCRText.Text>
                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[temp]</OutArgument>
                                                                </ui:GetOCRText.Text>
                                                              </ui:GetOCRText>
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </ui:BrowserScope.Body>
                                                      </ui:BrowserScope>
                                                    </Sequence>
                                                    <ui:Matches sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_10" Input="[temp]" IsBuilderTabModified="False" Pattern="(?&lt;=Total:\s\$|Total:\s\$ )(\d.+\.\d{2})" RegexOption="Multiline, Compiled" Result="[regex]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Matches>
                                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="ui:GenericValue">[totalDue]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="ui:GenericValue">[regex(0).value]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_107" Text="[&quot;S Total Due = &quot;+totalDue]" />
                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{id,duedate,invoiceNo,invoiceDate,compName,totalDue}]" DataTable="[buildDT]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
                                                    <ui:CloseTab Browser="{x:Null}" DisplayName="Close Tab" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CloseTab_7" />
                                                  </Sequence>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </ActivityAction>
                                        </ui:OpenBrowser.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:OpenBrowser>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="2031,387" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" Visible="False" WorkbookPath="example.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,278" sap2010:WorkflowViewState.IdRef="Sequence_64">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[buildDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Sheet1" StartingCell="A1" />
                        <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_2" Result="[readingForFormatting]" SheetName="Sheet1" StartingCell="E2" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="2031,2625" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="1995,2547" sap2010:WorkflowViewState.IdRef="Sequence_81">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="[indexForFormatting]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1953,2455" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[readingForFormatting]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1917,2322" sap2010:WorkflowViewState.IdRef="Sequence_65">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="rangeForDueDate" />
                                <Variable x:TypeArguments="ui:GenericValue" Name="rangeForInvoiceDate" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="1875,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[rangeForInvoiceDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">["D"+(indexForFormatting+2).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Format Invoice Date Excel Application Scope" sap:VirtualizedContainerService.HintSize="1875,825" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" WorkbookPath="example.xlsx">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,716" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="ui:GenericValue" Name="readInvoiceDate" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelReadCell Cell="[rangeForInvoiceDate]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_6" SheetName="Sheet1">
                                        <ui:ExcelReadCell.Result>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[readInvoiceDate]</OutArgument>
                                        </ui:ExcelReadCell.Result>
                                      </ui:ExcelReadCell>
                                      <If Condition="[readInvoiceDate.Contains(&quot;/&quot;)]" sap:VirtualizedContainerService.HintSize="797,525" sap2010:WorkflowViewState.IdRef="If_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,378" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="replaceInvoiceDateSlashToDash" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:Replace sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_3" Input="[readInvoiceDate]" IsBuilderTabModified="False" Pattern="\/" RegexOption="IgnoreCase, Compiled" Replacement="-" Result="[replaceInvoiceDateSlashToDash]" />
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[replaceInvoiceDateSlashToDash]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(replaceInvoiceDateSlashToDash.Split(" "c)(0).ToString.Trim).ToString("dd-MM-yyyy")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteCell Cell="[rangeForDueDate]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet1" Text="[replaceInvoiceDateSlashToDash]" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="ui:GenericValue" Name="elseInvoiceDateToDashFormat" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[elseInvoiceDateToDashFormat]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="ui:GenericValue">[Date.ParseExact(readInvoiceDate, "dd-MM-yyyy", CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelWriteCell Cell="[rangeForDueDate]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet1" Text="[elseInvoiceDateToDashFormat]" />
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                              <Assign sap:VirtualizedContainerService.HintSize="1875,60" sap2010:WorkflowViewState.IdRef="Assign_62">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[rangeForDueDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">["B"+(indexForFormatting+2).ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[item.Equals(&quot;Aenean LLC&quot;)]" sap:VirtualizedContainerService.HintSize="1875,1165" sap2010:WorkflowViewState.IdRef="If_4">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="915,1018" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,926" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" Visible="False" WorkbookPath="example.xlsx">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,817" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadCell Cell="[rangeForDueDate]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="Sheet1">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[readDueDateLLC]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                            <If Condition="[readDueDateLLC.Contains(&quot;-&quot;)]" sap:VirtualizedContainerService.HintSize="797,626" sap2010:WorkflowViewState.IdRef="If_5">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,479" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Replace sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[readDueDateLLC]" IsBuilderTabModified="False" Pattern="\-" RegexOption="IgnoreCase, Compiled" Replacement="/" Result="[replaceDueDateDashtoSlash]" />
                                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_123" Text="[replaceDueDateDashtoSlash]" />
                                                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[replaceDueDateDashtoSlashWrite]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(replaceDueDateDashtoSlash.Split(" "c)(0).ToString.Trim, "MM/dd/yyyy", CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ExcelWriteCell Cell="[rangeForDueDate]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="[replaceDueDateDashtoSlashWrite.ToShortDateString]" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_64">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[elseDueDateToSlashFormat]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(readDueDateLLC, "MM/dd/yyyy", CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ExcelWriteCell Cell="[rangeForDueDate]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="[elseDueDateToSlashFormat.ToShortDateString]" />
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                    </ui:ExcelApplicationScope>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="915,917" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="873,825" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" Visible="False" WorkbookPath="example.xlsx">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="839,716" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ExcelReadCell Cell="[rangeForDueDate]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="797,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_5" SheetName="Sheet1">
                                              <ui:ExcelReadCell.Result>
                                                <OutArgument x:TypeArguments="ui:GenericValue">[readDueDateLLC]</OutArgument>
                                              </ui:ExcelReadCell.Result>
                                            </ui:ExcelReadCell>
                                            <If Condition="[readDueDateLLC.Contains(&quot;/&quot;)]" sap:VirtualizedContainerService.HintSize="797,525" sap2010:WorkflowViewState.IdRef="If_6">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,378" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                                  <Sequence.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="replaceDueDateDashtoSlash" />
                                                  </Sequence.Variables>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:Replace sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[readDueDateLLC]" IsBuilderTabModified="False" Pattern="\/" RegexOption="IgnoreCase, Compiled" Replacement="-" Result="[replaceDueDateDashtoSlash]" />
                                                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[replaceDueDateDashtoSlashWrite]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[Convert.ToDateTime(replaceDueDateDashtoSlash.Split(" "c)(0).ToString.Trim)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ExcelWriteCell Cell="[rangeForDueDate]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sheet1" Text="[Convert.ToDateTime(replaceDueDateDashtoSlashWrite).ToString(&quot;dd-MM-yyyy&quot;)]" />
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="s:DateTime">[elseDueDateToSlashFormat]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(readDueDateLLC.Split(" "c)(0).ToString.Trim, "dd-MM-yyyy", CultureInfo.GetCultureInfo("en-IN").DateTimeFormat)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:ExcelWriteCell Cell="[rangeForDueDate]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="[Convert.ToDateTime(elseDueDateToSlashFormat).ToString(&quot;dd-MM-yyyy&quot;)]" />
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                    </ui:ExcelApplicationScope>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEach>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[buildDT]" Delimitator="Comma" DisplayName="Write CSV" FilePath="example.csv" sap:VirtualizedContainerService.HintSize="2031,152" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT'" sap:VirtualizedContainerService.HintSize="2031,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="9343be71a212b818bc7a763fad3ecac1" Selector="&lt;webctrl name='csv' tag='INPUT' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:TypeInto ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="2031,134" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="[Environment.CurrentDirectory+&quot;\example.csv&quot;]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="ccfddbc09a6b6bb4d88eb3318def29ac" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Choose File to Upload' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="2031,106" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="e508d33826db5081b9cec6ab72043b41" Selector="&lt;wnd app='iexplore.exe' cls='#32770' title='Choose File to Upload' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Open' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </ActivityAction>
          </ui:OpenBrowser.Body>
        </ui:OpenBrowser>
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>